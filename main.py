import streamlit as st

# MBTI별 추천 도서와 이유
mbti_books = {
    "INTJ": [
        ("📘 도덕경 - 노자", "통찰력 깊은 철학적 사고를 지닌 INTJ에게 영적 사유의 지도를 제공합니다."),
        ("📕 군주론 - 마키아벨리", "현실적 전략과 구조를 좋아하는 INTJ에게 이상과 권력의 교차점을 보여줍니다."),
        ("📗 월든 - 소로", "고독과 내면 성찰을 즐기는 INTJ에게 자연과 존재의 의미를 돌아보게 합니다.")
    ],
    "INTP": [
        ("📘 논어 - 공자", "사유를 즐기는 INTP에게 시대를 초월한 지혜와 토론의 근간을 제공합니다."),
        ("📕 파우스트 - 괴테", "호기심 많고 탐구적인 INTP에게 인간 욕망과 지식 탐색의 이야기를 선사합니다."),
        ("📗 방법서설 - 데카르트", "분석과 논리를 사랑하는 INTP에게 철학적 사고법을 소개합니다.")
    ],
    "ENTJ": [
        ("📘 손자병법", "리더십에 능한 ENTJ에게 전략과 전술의 정수를 담은 고전입니다."),
        ("📕 국가 - 플라톤", "체계와 이상을 중시하는 ENTJ에게 정의로운 국가란 무엇인가를 묻습니다."),
        ("📗 위대한 개츠비 - 피츠제럴드", "야망과 사회 구조에 관심 있는 ENTJ에게 인간 욕망의 이면을 보여줍니다.")
    ],
    "ENTP": [
        ("📘 갈릴레오의 생애 - 브레히트", "변화를 이끄는 ENTP에게 과학과 진보의 상징이 되는 인물입니다."),
        ("📕 이방인 - 카뮈", "기존 관념에 의문을 제기하는 ENTP에게 실존의 본질을 던지는 작품입니다."),
        ("📗 변신 - 카프카", "상상력 풍부한 ENTP에게 사회와 자아 사이의 경계 질문을 유도합니다.")
    ],
    "INFJ": [
        ("📘 데미안 - 헤세", "자기 내면을 탐색하는 INFJ에게 성찰과 자아 발견의 여정을 제공합니다."),
        ("📕 죄와 벌 - 도스토예프스키", "도덕과 윤리에 대한 깊은 고민을 하는 INFJ에게 충격적인 철학 드라마입니다."),
        ("📗 참을 수 없는 존재의 가벼움 - 쿤데라", "의미와 감정의 복잡성을 사랑하는 INFJ에게 꼭 맞는 작품입니다.")
    ],
    "INFP": [
        ("📘 어린 왕자 - 생텍쥐페리", "감성적인 INFP에게 순수함과 상상력의 세계를 선사합니다."),
        ("📕 폭풍의 언덕 - 브론테", "깊은 감정이입과 드라마를 즐기는 INFP에게 어울리는 사랑 이야기입니다."),
        ("📗 빨간 머리 앤 - 몽고메리", "개성과 상상력을 사랑하는 INFP에게 희망과 자존감을 줍니다.")
    ],
    "ENFJ": [
        ("📘 작은 아씨들 - 올컷", "타인을 아끼는 ENFJ에게 따뜻하고 성장 가득한 이야기입니다."),
        ("📕 태엽 감는 새 - 하루키", "감성과 의미를 조합하는 ENFJ에게 매혹적인 미스터리입니다."),
        ("📗 안나 카레니나 - 톨스토이", "인간관계와 도덕에 관심 많은 ENFJ에게 깊이 있는 고전입니다.")
    ],
    "ENFP": [
        ("📘 호밀밭의 파수꾼 - 샐린저", "자유롭고 감성적인 ENFP에게 공감되는 방황의 이야기입니다."),
        ("📕 피터 팬 - 배리", "영원한 어린이인 ENFP에게 꿈과 모험을 선사합니다."),
        ("📗 이상한 나라의 앨리스 - 캐럴", "엉뚱하고 창의적인 ENFP에게 꼭 맞는 상상의 세계입니다.")
    ],
    "ISTJ": [
        ("📘 1984 - 오웰", "사실과 구조를 중시하는 ISTJ에게 통제 사회의 경고를 담은 고전입니다."),
        ("📕 자기 앞의 생 - 로맹 가리", "조용한 헌신과 책임감을 지닌 ISTJ에게 감동을 주는 이야기입니다."),
        ("📗 카라마조프가의 형제들 - 도스토예프스키", "도덕적 갈등과 가족 이야기를 통해 깊이 있는 사색을 선사합니다.")
    ],
    "ISFJ": [
        ("📘 작은 아씨들 - 올컷", "가족과 전통을 중시하는 ISFJ에게 따뜻한 정서와 공감을 줍니다."),
        ("📕 제인 에어 - 브론테", "차분하면서도 강한 주인공의 삶이 ISFJ에게 위로를 줍니다."),
        ("📗 오만과 편견 - 오스틴", "예의 바르고 책임감 강한 ISFJ에게 이상적인 관계의 힌트를 줍니다.")
    ],
    "ESTJ": [
        ("📘 국가 - 플라톤", "질서와 시스템을 중시하는 ESTJ에게 이상적인 사회에 대해 성찰하게 합니다."),
        ("📕 데카메론 - 보카치오", "현실적이고 풍자적인 이야기들을 통해 ESTJ에게 유쾌한 교훈을 줍니다."),
        ("📗 멋진 신세계 - 헉슬리", "구조화된 미래 사회에서의 인간성을 고민하게 합니다.")
    ],
    "ESFJ": [
        ("📘 제인 에어 - 브론테", "헌신과 배려를 중시하는 ESFJ에게 사랑과 정의의 여정을 보여줍니다."),
        ("📕 데미안 - 헤세", "자신과 타인의 관계를 고민하는 ESFJ에게 영적인 성장의 이야기입니다."),
        ("📗 오만과 편견 - 오스틴", "사회적 관계와 미묘한 감정을 즐기는 ESFJ에게 이상적인 고전입니다.")
    ],
    "ISTP": [
        ("📘 변신 - 카프카", "객관적이고 독립적인 ISTP에게 자기 존재에 대한 철학적 질문을 던집니다."),
        ("📕 시간의 역사 - 호킹", "논리적이고 실용적인 ISTP에게 과학과 우주의 근본을 설명합니다."),
        ("📗 모비 딕 - 멜빌", "탐험과 집착 사이의 줄타기를 하는 인물들을 통해 깊은 상징성을 전합니다.")
    ],
    "ISFP": [
        ("📘 보바리 부인 - 플로베르", "감수성이 풍부한 ISFP에게 감정의 복잡성과 욕망을 보여줍니다."),
        ("📕 위대한 개츠비 - 피츠제럴드", "예술적 감각과 사랑의 환상을 가진 ISFP에게 어울리는 작품입니다."),
        ("📗 아Q정전 - 루쉰", "소외된 개인의 감정을 담은 풍자적 작품으로 감성적인 공감을 줍니다.")
    ],
    "ESTP": [
        ("📘 레 미제라블 - 위고", "정의감 넘치고 행동파인 ESTP에게 거대한 드라마를 선사합니다."),
        ("📕 햄릿 - 셰익스피어", "즉흥적이지만 분석적인 ESTP에게 인간 심리의 복합성을 보여줍니다."),
        ("📗 돈키호테 - 세르반테스", "도전과 모험을 즐기는 ESTP에게 유쾌한 에너지를 줍니다.")
    ],
    "ESFP": [
        ("📘 이상한 나라의 앨리스 - 캐럴", "즐겁고 생동감 있는 ESFP에게 환상적인 모험을 선사합니다."),
        ("📕 톰 소여의 모험 - 트웨인", "즉흥적이고 활발한 성격의 ESFP에게 딱 맞는 어린 시절 이야기입니다."),
        ("📗 피터 팬 - 배리", "끝없는 에너지를 지닌 ESFP에게 영원한 어린이의 마음을 보여줍니다.")
    ]
}

def main():
    st.title("📚 MBTI별 고전책 추천기")
    st.subheader("당신의 MBTI에 어울리는 고전 3권과 그 이유를 알려드릴게요!")

    mbti_list = sorted(mbti_books.keys())
    selected_mbti = st.selectbox("🔍 당신의 MBTI를 선택해주세요", mbti_list)

    if selected_mbti:
        st.balloons()  # 풍선 효과!
        st.markdown(f"### 🎯 {selected_mbti}에게 추천하는 고전 도서")
        for title, reason in mbti_books[selected_mbti]:
            st.markdown(f"**{title}**  \n💡 {reason}")
            st.markdown("---")

    st.caption("© 2025 BookMatch | 당신의 성향에 꼭 맞는 고전을 찾아드려요 📖✨")

if __name__ == "__main__":
    main()
